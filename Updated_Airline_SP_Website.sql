--Updating Register_Customer
create or replace PROCEDURE Register_Customer(FN IN CUSTOMER.FIRSTNAME%type, LN IN CUSTOMER.LASTNAME%type,ADDRESS IN CUSTOMER.STREETADDRESS%type,
                                              CITY IN CUSTOMER.CITY%type, STATE IN CUSTOMER.STATE%type, PHONE IN CUSTOMER.MOBILENUMBER%type, ID OUT CUSTOMER.CUSTOMERID%type)
   
IS
NID CUSTOMER.CUSTOMERID%TYPE;

BEGIN
  NID:= TEST_SEQ.NEXTVAL;
  
  INSERT INTO CUSTOMER(CUSTOMERID,FIRSTNAME,LASTNAME,STREETADDRESS,CITY,STATE,MOBILENUMBER)
  VALUES(NID,FN,LN,ADDRESS,CITY,STATE,PHONE);
  
  SELECT NID INTO ID
  FROM CUSTOMER
  WHERE NID = CUSTOMERID;
   DBMS_OUTPUT.PUT_LINE('The new customer has been successfully registered, Customer ID is: ' || ID);
END; 

--Test Register_Customer with out parameter
SET SERVEROUTPUT ON;
DECLARE N_ID CUSTOMER.CUSTOMERID%TYPE;
BEGIN  
REGISTER_CUSTOMER('Drake','Parker','2839 Abigail Road','Atlanta','GA','3224325647',N_ID);
DBMS_OUTPUT.PUT_LINE(N_ID);
END;

--Updating Find_Flight
create or replace PROCEDURE Find_Flight(SRC IN FLIGHT.AIRPORTID%type,DST IN FLIGHT.DESTINATIONID%type,DT IN FLIGHT.FLIGHTDATE%type,
                                        FNUM OUT FLIGHT.FLIGHTID%type, AMNT OUT FLIGHT.FARE%type, OSEATS OUT FLIGHT.REMAINING_SEATS%type)
IS
V_SOURCE      FLIGHT.AIRPORTID%type;
V_DESTINATION FLIGHT.DESTINATIONID%type;
V_DATE        FLIGHT.FLIGHTDATE%TYPE;
CURSOR CUR_FLIGHTS IS
   SELECT *
   FROM FLIGHT
   WHERE AIRPORTID = SRC AND DESTINATIONID = DST AND FLIGHTDATE = DT;
BEGIN
  OPEN CUR_FLIGHTS;
   LOOP
    FETCH CUR_FLIGHTS INTO FNUM,V_SOURCE,V_DESTINATION,AMNT,V_DATE,OSEATS;
    EXIT WHEN CUR_FLIGHTS%NOTFOUND;  
    --USE THIS TO CHECK WHEN ON SQL DEVELOPER/ OTHERWISE WONT RUN ON SITE
    --DBMS_OUTPUT.PUT_LINE('FLIGHT ID: '|| FNUM || ' SOURCE: ' || V_SOURCE || ' DESTINATION: ' || V_DESTINATION || ' FARE: $' || AMNT || 
                        -- ' DATE: ' || V_DATE || ' AVAILABLE SEATING: ' || OSEATS);
   END LOOP;
  CLOSE CUR_FLIGHTS;
END;

--Test Find_Flight with out parameter
SET SERVEROUTPUT ON;
DECLARE 
FNUM FLIGHT.FLIGHTID%TYPE;
AMNT FLIGHT.FARE%TYPE;
OSEATS FLIGHT.REMAINING_SEATS%TYPE;
BEGIN  
FIND_FLIGHT('CC1','DD1','20-APR-22',FNUM,AMNT,OSEATS);
DBMS_OUTPUT.PUT_LINE(FNUM);
DBMS_OUTPUT.PUT_LINE(AMNT);
DBMS_OUTPUT.PUT_LINE(OSEATS);
END;

--Updating Make_A_Reservation
create or replace PROCEDURE MAKE_A_RESERVATION(CUSTID IN RESERVATION.CUSTOMERID%type, FLYID IN RESERVATION.FLIGHTID%type,
                                               SEATS IN RESERVATION.SEATS_CONFIRMED%type, CONF OUT RESERVATION.CONFIRMATIONID%type)
IS
NCONF RESERVATION.CONFIRMATIONID%TYPE;

BEGIN
 
 NCONF:= TEST_SEQ.NEXTVAL;
 
 INSERT INTO RESERVATION(CONFIRMATIONID,CUSTOMERID,FLIGHTID,SEATS_CONFIRMED)
 VALUES(NCONF,CUSTID,FLYID,SEATS);
 
 SELECT NCONF INTO CONF
 FROM RESERVATION
 WHERE NCONF = CONFIRMATIONID;
 DBMS_OUTPUT.PUT_LINE('The customer ' || CUSTID || ' has made the reservation on flight ' || FLYID || ' with ' || SEATS || ' seats confirmed. Your confirmation number is ' || CONF || ' ');
END;

--Testing Make_A_Reservation with out parameter
SET SERVEROUTPUT ON;
DECLARE CONF RESERVATION.CONFIRMATIONID%TYPE;
BEGIN  
MAKE_A_RESERVATION('24','5','3',CONF);
DBMS_OUTPUT.PUT_LINE(CONF);
END;

--Updating View_Customer_Reservation
create or replace PROCEDURE View_Customer_Reservation(CUSTID IN RESERVATION.CUSTOMERID%type, CONF OUT RESERVATION.CONFIRMATIONID%TYPE, FN OUT CUSTOMER.FIRSTNAME%TYPE,
                                                      LN OUT CUSTOMER.LASTNAME%TYPE, FLID OUT RESERVATION.FLIGHTID%TYPE, STS OUT RESERVATION.SEATS_CONFIRMED%TYPE)
IS

CURSOR CUR_CUSRES IS
  SELECT RESERVATION.CONFIRMATIONID,CUSTOMER.FIRSTNAME,CUSTOMER.LASTNAME,RESERVATION.FLIGHTID,RESERVATION.SEATS_CONFIRMED 
  FROM RESERVATION,CUSTOMER
  WHERE CUSTOMER.CUSTOMERID = CUSTID AND CUSTOMER.CUSTOMERID = RESERVATION.CUSTOMERID;
BEGIN
 OPEN CUR_CUSRES;
  LOOP
    FETCH CUR_CUSRES INTO CONF,FN,LN,FLID,STS;
    EXIT WHEN CUR_CUSRES%NOTFOUND; 
    --USE THIS TO CHECK WHEN ON SQL DEVELOPER/ OTHERWISE WONT RUN ON SITE
    --DBMS_OUTPUT.PUT_LINE('CONFIMATION NUMBER: ' || CONF || ' NAME: ' || FN || ' ' || LN || 
      --                   ' FLIGHTID: ' || FLID || ' SEATS CONFIRMED: ' || STS);
  END LOOP;                       
END;

--Test View_Customer_Reservation with out parameters
SET SERVEROUTPUT ON;
DECLARE 
CONF RESERVATION.CONFIRMATIONID%TYPE;
FN CUSTOMER.FIRSTNAME%TYPE;
LN CUSTOMER.LASTNAME%TYPE;
FLID RESERVATION.FLIGHTID%TYPE;
STS RESERVATION.SEATS_CONFIRMED%TYPE;
BEGIN  
VIEW_CUSTOMER_RESERVATION('24',CONF,FN,LN,FLID,STS);
DBMS_OUTPUT.PUT_LINE(CONF);
DBMS_OUTPUT.PUT_LINE(FN);
DBMS_OUTPUT.PUT_LINE(LN);
DBMS_OUTPUT.PUT_LINE(FLID);
DBMS_OUTPUT.PUT_LINE(STS);
END;
